Traceback (most recent call last):
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/asyncio/base_events.py", line 647, in run_until_complete
    return future.result()
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
from vampires_dpp.image_registration import psf_offsets
from vampires_dpp.image_processing import shift_cube

kwargs = {
    "center": (128, 128),
    "window": 30,
    "method": "dft",
    "upsample_factor": 10,
    "refidx": metrics[0].argmax(),
}

cutoffs = [0, 0.25, 0.5, 0.75]

offsets = psf_offsets(abaur20190320_cube, **kwargs)

collapsed_frames = []
for metric in metrics:
    qs = np.quantile(metric, cutoffs)
    masks = [metric > q for q in qs]
    registered = [
        shift_cube(abaur20190320_cube[mask], -offsets[mask]) for mask in masks
    ]
    collapsed_frames.append([np.median(r, 0, overwrite_input=True) for r in registered])
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mIndexError[0m                                Traceback (most recent call last)
Cell [0;32mIn[7], line 20[0m
[1;32m     18[0m qs [38;5;241m=[39m np[38;5;241m.[39mquantile(metric, cutoffs)
[1;32m     19[0m masks [38;5;241m=[39m [metric [38;5;241m>[39m q [38;5;28;01mfor[39;00m q [38;5;129;01min[39;00m qs]
[0;32m---> 20[0m registered [38;5;241m=[39m [
[1;32m     21[0m     shift_cube(abaur20190320_cube[mask], [38;5;241m-[39moffsets[mask]) [38;5;28;01mfor[39;00m mask [38;5;129;01min[39;00m masks
[1;32m     22[0m ]
[1;32m     23[0m collapsed_frames[38;5;241m.[39mappend([np[38;5;241m.[39mmedian(r, [38;5;241m0[39m, overwrite_input[38;5;241m=[39m[38;5;28;01mTrue[39;00m) [38;5;28;01mfor[39;00m r [38;5;129;01min[39;00m registered])

Cell [0;32mIn[7], line 21[0m, in [0;36m<listcomp>[0;34m(.0)[0m
[1;32m     18[0m qs [38;5;241m=[39m np[38;5;241m.[39mquantile(metric, cutoffs)
[1;32m     19[0m masks [38;5;241m=[39m [metric [38;5;241m>[39m q [38;5;28;01mfor[39;00m q [38;5;129;01min[39;00m qs]
[1;32m     20[0m registered [38;5;241m=[39m [
[0;32m---> 21[0m     [43mshift_cube[49m[43m([49m[43mabaur20190320_cube[49m[43m[[49m[43mmask[49m[43m][49m[43m,[49m[43m [49m[38;5;241;43m-[39;49m[43moffsets[49m[43m[[49m[43mmask[49m[43m][49m[43m)[49m [38;5;28;01mfor[39;00m mask [38;5;129;01min[39;00m masks
[1;32m     22[0m ]
[1;32m     23[0m collapsed_frames[38;5;241m.[39mappend([np[38;5;241m.[39mmedian(r, [38;5;241m0[39m, overwrite_input[38;5;241m=[39m[38;5;28;01mTrue[39;00m) [38;5;28;01mfor[39;00m r [38;5;129;01min[39;00m registered])

File [0;32m/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/vampires_dpp/image_processing.py:95[0m, in [0;36mshift_cube[0;34m(cube, shifts, **kwargs)[0m
[1;32m     93[0m out [38;5;241m=[39m np[38;5;241m.[39mempty_like(cube)
[1;32m     94[0m [38;5;28;01mfor[39;00m i [38;5;129;01min[39;00m [38;5;28mrange[39m(cube[38;5;241m.[39mshape[[38;5;241m0[39m]):
[0;32m---> 95[0m     out[i] [38;5;241m=[39m [43mshift_frame[49m[43m([49m[43mcube[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m[43m [49m[43mshifts[49m[43m[[49m[43mi[49m[43m][49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mkwargs[49m[43m)[49m
[1;32m     96[0m [38;5;28;01mreturn[39;00m out

File [0;32m/opt/hostedtoolcache/Python/3.9.16/x64/lib/python3.9/site-packages/vampires_dpp/image_processing.py:16[0m, in [0;36mshift_frame[0;34m(data, shift, **kwargs)[0m
[1;32m     15[0m [38;5;28;01mdef[39;00m [38;5;21mshift_frame[39m(data: ArrayLike, shift, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m---> 16[0m     M [38;5;241m=[39m np[38;5;241m.[39mfloat32((([38;5;241m1[39m, [38;5;241m0[39m, [43mshift[49m[43m[[49m[38;5;241;43m1[39;49m[43m][49m), ([38;5;241m0[39m, [38;5;241m1[39m, shift[[38;5;241m0[39m])))
[1;32m     17[0m     [38;5;28;01mreturn[39;00m distort_frame(data, M, [38;5;241m*[39m[38;5;241m*[39mkwargs)

[0;31mIndexError[0m: index 1 is out of bounds for axis 0 with size 1
IndexError: index 1 is out of bounds for axis 0 with size 1

